name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    - name: Upload to EC2 via SCP
      env:
        SSH_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
      run: |
        echo "$SSH_PRIVATE_KEY" > github-actions-key
        chmod 600 github-actions-key
        scp -v -i github-actions-key -o StrictHostKeyChecking=no target/*.jar $EC2_USER@$EC2_HOST:/home/$EC2_USER/geuckrock/tobe

    - name: Deploy on EC2 via SSH
      env:
        SSH_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
      run: |
        echo "$SSH_PRIVATE_KEY" > github-actions-key
        chmod 600 github-actions-key
        ssh -i github-actions-key -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
          echo "Stopping existing application..."
          pkill -f /home/$EC2_USER/geuckrock/current/project.jar || true

          echo "Updating current application..."
          rm -rf /home/$EC2_USER/geuckrock/current
          mkdir /home/$EC2_USER/geuckrock/current
          mv /home/$EC2_USER/geuckrock/tobe/*.jar /home/$EC2_USER/geuckrock/current/

          echo "Starting new application..."
          cd /home/$EC2_USER/geuckrock/current
          sudo fuser -k -n tcp 8080 || true
          nohup java -jar project.jar > ./output.log 2>&1 &

          # Wait for a few seconds to let the application start
          sleep 5

          # Check if the application is running by searching for the process
          if ps aux | grep '[j]ava -jar /home/$EC2_USER/geuckrock/current/project.jar' > /dev/null
          then
            echo "Application started successfully!"
          else
            echo "Application failed to start. Check the log for errors."
            exit 1
          fi

          # Optionally, tail the logs to monitor the application output
          tail -f /home/$EC2_USER/geuckrock/current/output.log
        EOF
